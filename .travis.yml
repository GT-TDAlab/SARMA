language: cpp
dist: focal

addons:
  apt:
    packages:
      - g++-9
      - cmake-data
      - cmake
jobs:
  include:
    # Docs
    - os: linux
      language: python
      python: "3.7"
      addons:
        apt:
          packages:
            - doxygen
            - graphviz
before_install:
  # Dependencies required by the CI are installed in ${TRAVIS_BUILD_DIR}/deps/
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p "${DEPS_DIR}"
  - cd "${DEPS_DIR}"
  # OSX: Install packages
  - |
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      brew update
      brew install cmake --without-docs || brew upgrade cmake
      brew install hdf5 || brew upgrade hdf5
      brew install tbb || brew upgrade tbb
      brew install suite-sparse || brew upgrade suite-sparse
    fi
  - export CXX=${COMPILERCPP}
  - export CC=${COMPILERC}
  - ${CC} --version
  - ${CXX} --version
  # Travis machines have 2 cores
  - JOBS=2
  # Linux: Install a recent CMake
  - CMAKE_VERSION=3.17.0
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v${CMAKE_VERSION%.[0-9]}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    fi
  - cmake --version
  # Install SUNDIALS
  - |
    SUNDIALS_INSTALL=${DEPS_DIR}/sundials/install
    SUNDIALS_VERSION="3.2.1"
    if [[ ! -d "${DEPS_DIR}/sundials" || ! -d "${SUNDIALS_INSTALL}" ]]; then
      SUNDIALS_URL="https://computation.llnl.gov/projects/sundials/download/sundials-${SUNDIALS_VERSION}.tar.gz"
      mkdir -p sundials sundials/build
      travis_retry wget -O - ${SUNDIALS_URL} | tar --strip-components=1 -xz -C sundials
      (cd sundials/build && cmake .. -DCMAKE_INSTALL_PREFIX=${SUNDIALS_INSTALL} -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DEXAMPLES_ENABLE=OFF -DOPENMP_ENABLE=ON -DBUILD_KINSOL=OFF -DBUILD_ARKODE=OFF -DBUILD_CVODE=OFF -DBUILD_CVODES=OFF -DEXAMPLES_ENABLE=OFF -DCMAKE_C_FLAGS=-fPIC)
      (cd sundials/build && make install -j${JOBS})
    fi
    export SUNDIALS_ROOT="${SUNDIALS_INSTALL}"
    export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${SUNDIALS_INSTALL}/lib"
  # Linux: Install TBB
  - |
    TBB_INSTALL=${DEPS_DIR}/tbb/install
    TBB_VERSION="2020_U2"
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      if [[ ! -d "${DEPS_DIR}/tbb" || ! -d "${TBB_INSTALL}" ]]; then
        TBB_URL="https://github.com/01org/tbb/archive/${TBB_VERSION}.tar.gz"
        mkdir -p tbb
        travis_retry wget -O - ${TBB_URL} | tar --strip-components=1 -xz -C tbb
        TBB_BUILD=${DEPS_DIR}/tbb/build
        if [[ "${CXX%%+*}" == "clang" ]]; then
          (cd tbb && make compiler=clang stdver=c++14 tbb_build_dir=${TBB_BUILD} -j${JOBS})
          (cd tbb && make tbb_cpf=1 compiler=clang stdver=c++14 tbb_build_dir=${TBB_BUILD} -j${JOBS})
        else
          (cd tbb && make compiler=gcc stdver=c++14 tbb_build_dir=${TBB_BUILD} -j${JOBS})
          (cd tbb && make tbb_cpf=1 compiler=gcc stdver=c++14 tbb_build_dir=${TBB_BUILD} -j${JOBS})
        fi
        mkdir -p ${TBB_INSTALL}/lib
        mkdir -p ${TBB_INSTALL}/include
        (cd tbb && cp -r include/tbb ${TBB_INSTALL}/include/)
        find ${TBB_BUILD} -iname '*.so*' -exec cp {} ${TBB_INSTALL}/lib/ \;
        mkdir -p ${TBB_INSTALL}/lib/intel64
        ln -s ${TBB_INSTALL}/lib ${TBB_INSTALL}/lib/intel64/gcc4.4
      fi
      export TBB_ROOT="${TBB_INSTALL}"
      export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${TBB_INSTALL}/lib"
      export LIBRARY_PATH="${LIBRARY_PATH}:${TBB_INSTALL}/lib"
    fi

      install:
        - pip3 install -r docs/requirements.txt
      script:
        - mkdir ${TRAVIS_BUILD_DIR}/build && cd ${TRAVIS_BUILD_DIR}/build
        - cmake -DCMAKE_BUILD_TYPE=Release -G "CodeBlocks - Unix Makefiles" ..
        - make docs
        - cd ${TRAVIS_BUILD_DIR}
      deploy:
        edge: true
        provider: pages:git
        local_dir: ./build/docs/sphinx
        token: $GITHUB_TOKEN
        verbose: true
